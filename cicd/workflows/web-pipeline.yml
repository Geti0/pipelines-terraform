name: Web Pipeline

on:
  push:
    branches: [main, develop]
    paths: ['web/**', 'cicd/**']
  pull_request:
    paths: ['web/**']
  workflow_dispatch:
  workflow_run:
    workflows: ["Infrastructure Pipeline"]
    types: [completed]
    branches: [main, develop]

env:
  AWS_REGION: eu-north-1
  NODE_ENV: production
  CI: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Only run if triggered manually, by push/PR, or if infrastructure pipeline succeeded
    if: >
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'push' ||
      github.event_name == 'pull_request' ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
      
    steps:
      - uses: actions/checkout@v3
      
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: 'web/*/package-lock.json'
      
      # Install all dependencies in parallel
      - name: Install Dependencies
        run: |
          (cd web/frontend && npm ci --quiet) &
          (cd web/lambda && npm ci --quiet) &
          wait
      
      # Run quality checks for web components only (not terraform)
      - name: Quality Checks
        run: |
          chmod +x cicd/scripts/quality-checks.sh
          cicd/scripts/quality-checks.sh web
      
      # Check if infrastructure exists before deploying
      - name: Check Infrastructure Status
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        id: infra-check
        run: |
          chmod +x cicd/scripts/parameters.sh
          
          # Try to retrieve parameters
          if cicd/scripts/parameters.sh retrieve; then
            echo "infrastructure_exists=true" >> $GITHUB_OUTPUT
          else
            echo "infrastructure_exists=false" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è Infrastructure not deployed yet. Run Infrastructure Pipeline first."
          fi
      
      # Deploy only if infrastructure exists
      - name: Deploy Application
        if: |
          (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop') &&
          steps.infra-check.outputs.infrastructure_exists == 'true'
        run: |
          chmod +x cicd/scripts/deploy-application.sh
          cicd/scripts/deploy-application.sh

      # Show message if infrastructure doesn't exist
      - name: Infrastructure Required Message
        if: |
          (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop') &&
          steps.infra-check.outputs.infrastructure_exists != 'true'
        run: |
          echo "üìã Infrastructure deployment required!"
          echo "Please run the Infrastructure Pipeline first to create:"
          echo "  - S3 bucket for frontend hosting"
          echo "  - CloudFront distribution"
          echo "  - Lambda function"
          echo "  - API Gateway"
          echo "  - DynamoDB table"
          echo ""
          echo "After infrastructure is deployed, this pipeline will run automatically."