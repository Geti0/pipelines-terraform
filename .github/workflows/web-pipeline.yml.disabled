name: Web Pipeline
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      
      - name: Install frontend dependencies
        run: |
          cd web/frontend
          npm install
      
      - name: Lint JS
        run: |
          cd web/frontend
          npx eslint .
      
      - name: Lint CSS
        run: |
          cd web/frontend
          npx stylelint "**/*.css"
      
      - name: Run frontend tests
        run: |
          cd web/frontend
          npx jest --coverage
      
      - name: Build static site
        run: |
          cd web/frontend
          npx vite build
      
      - name: Install Lambda dependencies
        run: |
          cd web/lambda
          npm install
      
      - name: Lint Lambda
        run: |
          cd web/lambda
          npx eslint index.js
      
      - name: Run Lambda tests
        run: |
          cd web/lambda
          npx jest --coverage
      
      - name: Check if infrastructure exists
        id: infra-check
        run: |
          cd infra/terraform
          terraform init
          # Check if terraform state has resources
          if terraform show > /dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Infrastructure exists, proceeding with deployment"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Infrastructure not deployed yet, skipping deployment steps"
          fi
      
      - name: Get Terraform outputs
        id: terraform-outputs
        if: steps.infra-check.outputs.exists == 'true'
        run: |
          cd infra/terraform
          echo "s3_bucket=$(terraform output -raw s3_bucket_name)" >> $GITHUB_OUTPUT
          echo "cloudfront_id=$(terraform output -raw cloudfront_distribution_id)" >> $GITHUB_OUTPUT
      
      - name: Deploy to S3
        if: steps.infra-check.outputs.exists == 'true'
        run: |
          aws s3 sync web/frontend/dist s3://${{ steps.terraform-outputs.outputs.s3_bucket }} --delete
      
      - name: Invalidate CloudFront
        if: steps.infra-check.outputs.exists == 'true'
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ steps.terraform-outputs.outputs.cloudfront_id }} --paths "/*"
