name: Terraform Pipeline

# This pipeline creates and manages AWS infrastructure
# Note: AWS CodePipeline is also available for production deployments

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    # Also allow manual triggering

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra/terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      
      - name: Terraform Init
        run: terraform init
      
      - name: Terraform Format
        run: terraform fmt -check -recursive
      
      - name: Terraform Validate
        run: terraform validate
        
      - name: TFLint
        uses: terraform-linters/setup-tflint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Run TFLint
        run: tflint --init && tflint
        
      - name: Checkov Security Scan
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: ./infra/terraform
          
      - name: Terraform Plan
        run: terraform plan -out=tfplan
      
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && success()
        run: |
          echo "Applying Terraform changes to create AWS infrastructure..."
          terraform apply -auto-approve tfplan
          echo "Infrastructure deployment complete!"
          echo "Infrastructure outputs:"
          if terraform output > /dev/null 2>&1; then
            terraform output
          else
            echo "No outputs available."
          fi
      
      - name: Set up Go
        if: github.ref == 'refs/heads/main' && success()
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      
      - name: Run Terratest
        if: github.ref == 'refs/heads/main' && success()
        run: |
          cd ../../infra/test
          go mod tidy
          go test -v -timeout 30m
          
      - name: Trigger Web Pipeline
        if: github.ref == 'refs/heads/main' && success()
        run: |
          echo "Infrastructure deployment completed successfully!"
          echo "Web pipeline will be triggered by the same push event..."
          echo "Check the Web Pipeline workflow for application deployment."
