name: Web Pipeline

on:
  workflow_run:
    workflows: ["Infrastructure Pipeline"]
    types: [completed]
    branches: [main, develop]
    conditions: [success]
  workflow_dispatch:

env:
  AWS_REGION: eu-north-1
  NODE_ENV: production
  CI: true

jobs:
  deploy:
    runs-on: ubuntu-latest
      
    steps:
      - uses: actions/checkout@v3
      
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: 'web/*/package-lock.json'
      
      # Install all dependencies in parallel
      - name: Install Dependencies
        run: |
          (cd web/frontend && npm ci --quiet) &
          (cd web/lambda && npm ci --quiet) &
          wait
      
      # Run quality checks for web components only (not terraform)
      - name: Quality Checks
        run: |
          chmod +x .github/scripts/quality-checks.sh
          .github/scripts/quality-checks.sh web
      
      # Wait for infrastructure parameters to be available (with retry)
      - name: Wait for Infrastructure Parameters
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        id: infra-check
        run: |
          echo "Waiting for infrastructure parameters to be available..."
          
          # Wait up to 5 minutes for parameters to be available
          for i in {1..30}; do
            echo "Attempt $i/30: Checking for infrastructure parameters..."
            
            if aws ssm get-parameter --name "/pipelines-terraform/s3-bucket-name" --query 'Parameter.Value' --output text --region eu-north-1 > /dev/null 2>&1; then
              echo "infrastructure_exists=true" >> $GITHUB_OUTPUT
              echo " Infrastructure parameters found!"
              break
            else
              echo " Infrastructure parameters not ready yet, waiting 10 seconds..."
              sleep 10
            fi
            
            if [ $i -eq 30 ]; then
              echo "infrastructure_exists=false" >> $GITHUB_OUTPUT
              echo " Infrastructure parameters not found after 5 minutes!"
              echo "Please ensure the Infrastructure Pipeline has completed successfully first."
            fi
          done
      
      # Deploy the application
      - name: Deploy Application
        if: |
          (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop') &&
          steps.infra-check.outputs.infrastructure_exists == 'true'
        run: |
          chmod +x .github/scripts/parameters.sh
          chmod +x .github/scripts/deploy-application.sh
          
          # Retrieve infrastructure parameters using the script
          echo "Retrieving infrastructure parameters..."
          .github/scripts/parameters.sh retrieve
          
          # Deploy the application
          .github/scripts/deploy-application.sh
      
      # Show message if infrastructure doesn't exist
      - name: Infrastructure Required Message
        if: |
          (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop') &&
          steps.infra-check.outputs.infrastructure_exists != 'true'
        run: |
          echo " Infrastructure deployment required!"
          echo "Please run the Infrastructure Pipeline first to create:"
          echo "  - S3 bucket for frontend hosting"
          echo "  - CloudFront distribution"
          echo "  - Lambda function"
          echo "  - API Gateway"
          echo "  - DynamoDB table"
          echo ""
          echo "After infrastructure is deployed, this pipeline will run automatically."
