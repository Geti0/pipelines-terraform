name: Web Pipeline

on:
  push:
    branches: [main, develop]
    paths: ['web/**', '.github/**']
  pull_request:
    paths: ['web/**']
  workflow_dispatch:
  workflow_run:
    workflows: ["Infrastructure Pipeline"]
    types: [completed]

env:
  AWS_REGION: eu-north-1
  NODE_ENV: production
  CI: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: >
      github.event_name != 'workflow_run' || 
      github.event.workflow_run.conclusion == 'success'
      
    steps:
      - uses: actions/checkout@v3
      
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: 'web/*/package-lock.json'
      
      # Install all dependencies in parallel
      - name: Install Dependencies
        run: |
          (cd web/frontend && npm ci --quiet) &
          (cd web/lambda && npm ci --quiet) &
          wait
      
      # Run quality checks in parallel
      - name: Quality Checks
        run: |
          chmod +x .github/scripts/quality-checks.sh
          .github/scripts/quality-checks.sh all
      
      # Deploy only on main/develop
      - name: Deploy Application
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        run: |
          # Retrieve infrastructure parameters
          chmod +x .github/scripts/parameters.sh
          .github/scripts/parameters.sh retrieve
          
          # Deploy application
          chmod +x .github/scripts/deploy-application.sh
          .github/scripts/deploy-application.sh