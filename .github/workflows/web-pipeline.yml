name: Web Pipeline

on:
  push:
    branches: [main, develop]
    paths: ['web/**', '.github/**']
  pull_request:
    paths: ['web/**']
  workflow_dispatch:
  workflow_run:
    workflows: ["Infrastructure Pipeline"]
    types: [completed]
    branches: [main, develop]
    conditions: [success]

env:
  AWS_REGION: eu-north-1
  NODE_ENV: production
  CI: true

jobs:
  deploy:
    runs-on: ubuntu-latest
      
    steps:
      - uses: actions/checkout@v3
      
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: 'web/*/package-lock.json'
      
      # Install all dependencies in parallel
      - name: Install Dependencies
        run: |
          (cd web/frontend && npm ci --quiet) &
          (cd web/lambda && npm ci --quiet) &
          wait
      
      # Run quality checks for web components only (not terraform)
      - name: Quality Checks
        run: |
          chmod +x .github/scripts/quality-checks.sh
          .github/scripts/quality-checks.sh web
      
      # Retrieve infrastructure parameters (infrastructure pipeline has already completed successfully)
      - name: Retrieve Infrastructure Parameters
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        run: |
          chmod +x .github/scripts/parameters.sh
          
          echo "Retrieving infrastructure parameters..."
          .github/scripts/parameters.sh retrieve
          
          # Verify environment variables are set
          echo "Environment variables:"
          echo "S3_BUCKET: ${S3_BUCKET:-NOT_SET}"
          echo "CLOUDFRONT_ID: ${CLOUDFRONT_ID:-NOT_SET}"
          echo "API_GATEWAY_URL: ${API_GATEWAY_URL:-NOT_SET}"
          echo "LAMBDA_FUNCTION_NAME: ${LAMBDA_FUNCTION_NAME:-NOT_SET}"
          echo "DYNAMODB_TABLE_NAME: ${DYNAMODB_TABLE_NAME:-NOT_SET}"
      
      # Deploy the application
      - name: Deploy Application
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        run: |
          chmod +x .github/scripts/deploy-application.sh
          
          # Deploy the application (parameters are already available from previous step)
          .github/scripts/deploy-application.sh
